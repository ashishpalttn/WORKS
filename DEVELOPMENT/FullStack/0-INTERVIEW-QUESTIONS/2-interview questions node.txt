https://chatgpt.com/share/676f02a2-b10c-8007-b0be-16ec03ad9acc

---------------------------------------------------------------------------------------------------------------------------

Q1- What is node.js and how does it work?
    Node.js is run time environment for excuting javaScrits. its build on V8 engine and uses an even-driven and not blocking I/O model. 
    V8 workflow ?
    step1 -> Parsing = js code parse into an AST(Abstract Syntex tree)
    step2 -> Compilation to byte code(Ignition interpreter) = 
    step3 -> Profiling = while running the code, v8 profile the hot function or loop that excute frequently
    step4 -> Optimisation = hot code higly optimise into the machine code
    step5 -> deoptimisation = v8 deoptimise when optimise code not needed
Q2- what are the feature of Node.js?
    1- event-driven model
    2- non blocking model
    3- single thread
    4- fast excution
    5- large ecosystem
Q3- what is event loop in Node.js? and how dose it works?
    evet loop is a fundamental concept in Node.js that help up to achive asynchronous functionality even it's running on single thread. it put all async operation in the event queue and once that are done then event loop excute it.
Q4- what is streams in Node.js? Can you explain their types?
    stream are use continous data flow.
    1- Readable (eg:- fs.createReadeStream)
    2- Writable (eg:- fs.createWriteStream)
    3- Duplex   (eg:- net.socket)
    4- Transform
Q5- what is the middleware in context of Node.js? how is it used in Express.js
    middleware function process request and response. in express they are used for logging, authentication and error handling
Q6- How do you optimise the performance of node application?
    1- optimse queries
    2- use clusting
    3- use cashing
    4- limit middleware use
    5- monitor performance(New Relic, PM2)
Q7- What is clustring in Node.js? how the scaling application.
    cluster allow a Node application to spawn multiple process by utilizing multiple cores
Q8 How would you secure node application
    1-validate use input
    2-HTTPs
    3-authentication and autherisation
    4-use helmet.js for rate limit
    5 protect agains SQL injection